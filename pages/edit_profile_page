import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/cupertino.dart';
import "package:flutter/material.dart";
import 'package:killacam_social/models/app_user.dart';
import 'package:killacam_social/widgets/brand_circular_progress.dart';
import 'package:killacam_social/widgets/edit_page_app_bar.dart';
import 'package:killacam_social/widgets/edit_profile_list_view.dart';

import 'home_page.dart';

class EditProfilePage extends StatefulWidget {
  const EditProfilePage({
    Key? key,
    required this.currentUserId,
  }) : super(key: key);

  final String? currentUserId;

  @override
  _EditProfilePageState createState() => _EditProfilePageState();
}

class _EditProfilePageState extends State<EditProfilePage> {
  TextEditingController displayNameController = TextEditingController();
  TextEditingController bioController = TextEditingController();
  bool isLoading = false;
  AppUser? user;
  bool _bioValid = true;
  bool _displayNameValid = true;

  @override
  void initState() {
    super.initState();
    getUser();
  }

  getUser() async {
    setState(() {
      isLoading = true;
    });
    DocumentSnapshot doc = await usersRef
        .doc(
          widget.currentUserId,
        )
        .get();
    user = AppUser.fromDocument(doc);
    displayNameController.text = user!.displayName;
    bioController.text = user!.bio;
    setState(() {
      isLoading = false;
    });
  }

  updateProfileData() {
    setState(() {
      displayNameController.text.trim().length < 3 ||
              displayNameController.text.isEmpty
          ? _displayNameValid = false
          : _displayNameValid = true;
      bioController.text.trim().length > 100
          ? _bioValid = false
          : _bioValid = true;
    });

    if (_displayNameValid && _bioValid) {
      usersRef
          .doc(
        widget.currentUserId,
      )
          .update({
        'displayName': displayNameController.text,
        'bio': bioController.text,
      });
      SnackBar snackBar = const SnackBar(
        content: Text('Profile updated'),
      );
      ScaffoldMessenger.of(context).showSnackBar(snackBar);
      Navigator.pop(context);
    }
  }

  logout() async {
    await googleSignIn.signOut();
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) => const HomePage(),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: EditPageAppBar(
        onPressedUpdate: updateProfileData,
      ),
      body: isLoading
          ? const BrandCircularProgress()
          : EditProfileListView(
              bioController: bioController,
              displayNameController: displayNameController,
              errorTextBio: _bioValid ? null : 'Bio too long',
              errorTextDisplayName:
                  _displayNameValid ? null : 'Display name too short',
              userPhotoUrl: user!.photoUrl,
            ),
    );
  }
}
